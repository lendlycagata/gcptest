{"version":3,"sources":["constants/apiConstants.js","components/LoginForm/LoginForm.js","components/Header/Header.js","components/RegistrationForm/RegistrationForm.js","components/Home/Home.js","components/Admin/admin.js","components/Stars/stars.js","components/Footer/Footer.js","components/Events/events.js","components/Tasks/tasks.js","components/AlertComponent/AlertComponent.js","components/routes/PrivateRoute.js","components/routes/adminRoute.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","authenticationService","currentUser","localStorage","getItem","logout","removeItem","withRouter","props","currentUserValue","history","push","window","location","reload","useState","email","password","successMessage","state","setState","handleChange","e","target","id","value","prevState","className","style","backgroundImage","htmlFor","type","aria-describedby","placeholder","onChange","onClick","preventDefault","payload","headers","axios","post","then","response","status","data","token","showError","setItem","console","log","catch","error","display","role","updateTitle","Header","isLoggedIn","to","alt","src","width","height","Dropdown","Toggle","variant","Menu","Item","href","confirmPassword","required","length","code","sendDetailsToServer","Home","events","now","moment","bind","get","event","err","this","filter","current","isBefore","eventDate","sort","a","b","Date","split","map","startOf","fromNow","eventID","eventName","Component","Name","Venue","Detail","Stars","Code","StartTime","EndTime","setEvents","photo","setPhoto","date","minDate","dateFormat","files","starttime","disableClock","time","datestr","toISOString","formData","FormData","append","ADMIN_BASE_URL","alert","user","Footer","isAdmin","Events","authenticateCode","loggedUser","goBack","match","params","TASK_BASE_URL","eventPhoto","format","eventVenue","eventDetail","eventStars","eventStart","eventEnd","eventCode","DateDue","userID","task","setTasks","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","useEffect","errorMessage","aria-label","aria-hidden","PrivateRoute","component","rest","render","pathname","from","AdminRoute","App","title","updateErrorMessage","path","exact","refresh","Admin","Tasks","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.321a0148.chunk.js","sourcesContent":["export const ADMIN_BASE_URL = 'http://localhost:4000/admin/';\nexport const TASK_BASE_URL = 'http://localhost:4000/task/';\nexport const API_BASE_URL = 'http://localhost:4000/api/';","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n// import { BehaviorSubject } from 'rxjs';\n\n// const currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    currentUser: localStorage.getItem('currentUser'),\n    get currentUserValue () { return localStorage.getItem('currentUser') }\n};\n\nfunction LoginForm(props) {\n\n    if (authenticationService.currentUserValue) { \n        props.history.push('/home');\n        window.location.reload(true)\n    }\n\n    if (authenticationService.currentUser === 'admin') { \n        props.history.push('/admin');\n        window.location.reload(true)\n    }\n\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        successMessage: null,\n    })\n\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        // redirectToHome();\n        e.preventDefault();\n        const payload={\n            headers: { 'Content-Type': 'application/json' },\n            \"email\":state.email,\n            \"password\":state.password,\n        }\n\n        axios.post(API_BASE_URL+'login', payload)\n            .then(function (response) {\n                if(response.status === 200){\n                    setState(prevState => ({\n                        ...prevState,\n                        'successMessage' : 'Login successful. Redirecting to home page..'\n                    }))\n\n                    let token = response.data.token;\n                    let email = payload.email\n                    let header = payload.headers\n                    const user = {\n                        email,\n                        token,\n                        header\n                    }\n                    props.showError(null);\n                    window.location.reload(true)\n                    localStorage.setItem('currentUser', email)\n                    // currentUserSubject.next(response.data.token);\n                    // redirectToHome();\n                }\n                else if(payload.email=== \"admin\" && payload.password === \"admin\"){\n                    props.showError(null)\n                    window.location.reload(true)\n                    localStorage.setItem('currentUser', payload.email)\n                }\n                else if(response.status === 204){\n                    console.log(response)\n                    props.showError(\"Username and password do not match\");\n                }\n                else{\n                    console.log(response.status)\n                    props.showError(\"Username does not exist\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    // const redirectToAdminPage = () => {\n    //     props.history.push('/admin')\n    // }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home')\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register'); \n        props.updateTitle('Register');\n    }\n\n    return(\n        <div className=\"col-xs-6 col-sm-8 col-lg-6 login-card mt-2 hv-center login\" style={{backgroundImage: `url(${'../meerkat.jpg'})`}}> \n            <form>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input type=\"password\" \n                       className=\"form-control\" \n                       id=\"password\" \n                       placeholder=\"Password\"\n                       value={state.password}\n                       onChange={handleChange}\n                />\n                </div>\n                <div className=\"form-check\">\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >LOG IN</button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'flex' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"registerMessage\">\n                <span>Don't have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span> \n            </div>\n        </div>\n    )\n}\n\nexport function logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n}\n\nexport default withRouter(LoginForm);","import React from 'react';\nimport './Header.css'\nimport FaceIcon from '@material-ui/icons/Face';\nimport { Link } from \"react-router-dom\";\nimport {logout} from '../LoginForm/LoginForm'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { authenticationService } from '../LoginForm/LoginForm';\n\nfunction Header() {\n    const currentUser = authenticationService.currentUserValue\n    const isLoggedIn = currentUser\n    \n    return(\n        <div className=\"container\">\n        <nav className=\"navbar\">\n            <div className=\"telus-header text-light\" >\n                        <div className=\"telus-image text-light\">\n                        <Link to='/home'>\n                        <img\n                                alt=\"\"\n                                src=\"../TIDS.png\"\n                                width=\"205px\"\n                                height=\"45px\"\n                            />\n                        </Link>\n                        </div>\n            </div>\n            \n            {isLoggedIn ? \n            <div className=\"telus-user text-light\">\n            \n            <div className=\"telus-user-icon\">\n            <Dropdown>\n            <Dropdown.Toggle id=\"dropdown-basic\" variant=\"secondary\">\n            <FaceIcon /> \n            &nbsp;\n            {currentUser}\n            &nbsp;\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n                <Dropdown.Item onClick={logout} href=\"/login\">Log out</Dropdown.Item>\n            </Dropdown.Menu>\n            </Dropdown>\n            </div>\n            \n            \n{/*            \n        <div className=\"telus-user text-light\">\n            <div className=\"telus-user-icon\">\n                <FaceIcon />\n                </div>\n                <div className=\"telus-logout\">\n                    {currentUser} &nbsp; \n                    <a className=\"logout-button\" onClick={logout} href=\"/login\">Logout</a>\n                </div> */}\n                </div>\n            : null\n            }\n        </nav>\n        </div>\n\n\n\n    )\n    \n\n    \n}\nexport default Header;","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './RegistrationForm.css';\nimport {API_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport { authenticationService } from '../LoginForm/LoginForm';\n\n\nfunction RegistrationForm(props) {\n\n    if (authenticationService.currentUserValue) { \n        props.history.push('/home');\n        window.location.reload(true)\n    }\n\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        confirmPassword: \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n    const sendDetailsToServer = () => {\n        if(state.email.length && state.password.length) {\n            // redirectToHome();\n            props.showError(null);\n            const payload={\n                \"email\":state.email,\n                \"password\":state.password,\n            }\n            axios.post(API_BASE_URL+'register', payload)\n                .then(function (response) {\n                    if(response.data.code === 200){\n                        setState(prevState => ({\n                            ...prevState,\n                            'successMessage' : 'Registration successful. Redirecting to home page..'\n                        }))\n                        props.showError(null)\n                        localStorage.setItem('currentUser', payload.email);\n                        window.location.reload(true)\n                    } else{\n                        props.showError(\"Username already exists\");\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });    \n        } else {\n            props.showError('Please enter valid username and password')    \n        }\n        \n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login');\n    }\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if(state.password === state.confirmPassword) {\n            sendDetailsToServer()    \n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n\n    return(\n        <div className=\"col-xs-6 col-sm-8 col-lg-6 mt-2 hv-center registration \" style={{backgroundImage: `url(${'../cheetah.jpg'})`}}>\n            <form >\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                       required\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"password\" \n                        placeholder=\"Password\"\n                        value={state.password}\n                        onChange={handleChange} \n                        required\n                    />\n                </div>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                    <input type=\"password\" \n                        className=\"form-control\" \n                        id=\"confirmPassword\" \n                        placeholder=\"Confirm Password\"\n                        value={state.confirmPassword}\n                        onChange={handleChange} \n                        required\n                    />\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >\n                    Register\n                </button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'flex' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"mt-2\">\n                <span>Already have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span> \n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {API_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter, Link } from \"react-router-dom\";\nimport moment from 'moment'\nimport \"./Home.css\"\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            events: [],\n            now : moment ()\n        }\n        \n        this.setState = this.setState.bind(this)\n        \n    }\n\n    componentDidMount(){\n        axios.get(API_BASE_URL+'get')\n        .then(event => {\n            const events = event.data\n            this.setState({\n                events\n            })\n\n    })\n        .catch(err => console.log(\"Error \"+ err))\n    }\n\n\n    render(){\n    return(\n        <div className=\"col-xs-6 col-sm-8 col-lg-6 hv-center home\" style={{backgroundImage: `url(${'../turtles.jpg'})`}}>\n\t\t<div className=\"title\">\n\t\t\tEvents\n\t\t</div>\n\t\t<div className=\"calendar\">\n            {this.state.events\n                .filter(current => this.state.now.isBefore(current.eventDate))\n                .sort((a,b) => new Date(a.eventDate.split('/')) - new Date(b.eventDate.split('/')))\n                .map(post =>\n\t\t\t\t<div className=\"calendar-row\">\n\t\t\t\t\t<div className=\"date font-weight-bold\">\n                    {moment(post.eventDate).startOf('day').fromNow()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"details font-weight-bold\" >\n                    <Link to={'/events/' + post.eventID} className='Link'>{post.eventName}</Link>\n                    </div>\n\t\t\t\t</div>\n             )} \n\t\t</div>\n        <div className=\"push\"></div>\n\t</div>\n    )\n}\n}\n\nexport default withRouter(Home);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {ADMIN_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport DatePicker from 'react-date-picker';\nimport TimePicker from 'react-time-picker';\nimport './admin.css'\n\n\nfunction AdminPage(props) {\n\n    const [event , setEvents] = useState({\n        Name : \"\",\n        Date : new Date(),\n        Venue: \"\",\n        Detail: \"\",\n        Stars: \"\",\n        Code: \"\",\n        StartTime: '',\n        EndTime: ''\n    })\n\n    const [photo, setPhoto] = useState('')\n\n\n    const handleFileSelect = (e) => {\n        setPhoto(e.target.files[0])\n    }\n    \n    const handleChangeStartTime = (starttime) => {\n        setEvents(prevState => ({\n            ...prevState,\n            StartTime: starttime\n        }))\n    }\n\n    const handleChangeEndTime = (time) => {\n        setEvents(prevState => ({\n            ...prevState,\n            EndTime: time\n        }))\n    }\n\n    const handleChangeDate = (date) => {\n        setEvents(prevState => ({\n            ...prevState,\n            Date : date\n        }))\n    }\n\n    const handleChange = e => {\n        const {id , value} = e.target   \n        setEvents(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = e => {\n        e.preventDefault();\n        var datestr = (new Date(event.Date)).toISOString();\n        var formData = new FormData();\n            formData.append('eventName', event.Name);\n            formData.append('eventDate', datestr);\n            formData.append('eventVenue', event.Venue);\n            formData.append('eventDetail', event.Detail);\n            formData.append('eventStars', event.Stars);\n            formData.append('eventPhoto', photo);\n            formData.append('eventCode', event.Code);\n            formData.append('eventStart', event.StartTime);\n            formData.append('eventEnd', event.EndTime);\n        // console.log(fd)\n        // const payload={\n        //     \"eventName\" : event.Name,\n        //     \"eventDate\" : event.Date,\n        //     \"eventVenue\" : event.Venue,\n        //     \"eventDetail\" : event.Detail,\n        //     \"eventStars\" : event.Stars,\n        //     \"eventPhoto\" : fd,\n        //     \"eventStart\" : event.StartTime,\n        //     \"eventEnd\" : event.EndTime\n        // }\n        // fd.append('files', payload)\n        if(formData){\n        axios.post(ADMIN_BASE_URL+'adminpost', formData)\n            .then(function (response) {\n                if(response.data.code === 200){\n                    setEvents(prevState => ({\n                        ...prevState\n                    }))\n                }\n            })\n            .catch(function (error) {\n                console.log(\"Error\" + error);\n            });\n            alert(\"Event posted!\")\n        }\n        else{\n            e.preventDefault();\n        }\n    }\n\n    return(\n        <div className=\"col-xs-6 col-sm-8 col-lg-6 hv-center mt-2 admin\">\n            <form>\n                <div className=\"form-group text-left admin-content\">\n                <label>Event Name</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"Name\" \n                       placeholder=\"Enter event name\" \n                       value={event.Name}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n                <div className=\"form-group text-left\">\n                <label>Event Date</label>\n                <br />\n                <DatePicker\n                    onChange={handleChangeDate}\n                    value={event.Date}\n                    minDate={new Date()}\n                    required\n                    dateFormat=\"yyyy/MM/dd\"\n                    />\n                </div>\n                \n                <div className=\"form-group text-left\">\n                <label>Event Venue</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"Venue\" \n                       placeholder=\"Enter event venue\" \n                       value={event.Venue}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n\n                <div className=\"form-group text-left\">\n                <label>Event Details</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"Detail\" \n                       placeholder=\"Enter event details\" \n                       value={event.Detail}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n\n                <div className=\"form-group text-left\">\n                <label>Event Photo</label>\n                <input type=\"file\" \n                       className=\"form-control\" \n                       id=\"Photo\"\n                       onChange={handleFileSelect}\n                />\n                </div>\n\n                <div className=\"form-group text-left\">\n                <label>Event Stars</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"Stars\" \n                       placeholder=\"How many stars is this event worth?\" \n                       value={event.Stars}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n\n                <div className=\"form-group text-left\">\n                <label>Event Code</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"Code\" \n                       placeholder=\"Enter event code\" \n                       value={event.Code}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n\n                 <div className=\"form-group text-left\">\n                <label>From</label>\n                <br />\n                <TimePicker\n                    onChange={handleChangeStartTime}\n                    value={event.StartTime}\n                    required\n                    disableClock={true}\n                />\n\n                </div>\n\n                <div className=\"form-group text-left\">\n                <label>To</label>\n                <br />\n                <TimePicker\n                    onChange={handleChangeEndTime}\n                    value={event.EndTime}\n                    required\n                    disableClock={true}\n                    />\n\n                </div> \n\n                <div className=\"form-check\">\n                </div>\n\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-clock\"\n                    onClick={handleSubmitClick}\n                >Submit</button>\n            </form>\n            <div className=\"push\"></div>\n        </div>\n    )\n}\n\nexport default withRouter(AdminPage);","import React, {Component} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport './stars.css'\nimport { authenticationService } from '../LoginForm/LoginForm';\n\nclass Stars extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            user: ''\n        }\n        this.setState = this.setState.bind(this)\n    }\n\n    componentDidMount(){\n        const user = authenticationService.currentUserValue\n        this.setState({user})\n    }\n\n    render(){\n    return(\n    <div className=\"stars col-xs-6 col-sm-8 col-lg-6 mt-2 hv-center\" style={{backgroundImage: `url(${'../tang.jpg'})`}}>\n        <div className=\"title\">\n            Stars \n        </div>\n            <div className=\"testUser\">\n                <h4>\n               {this.state.user}\n                </h4>\n            </div>\n        <hr className=\"hr\"/>\n        <h3>\n        Total Stars: 0\n        </h3>\n\t</div>\n    )\n}\n}\n\nexport default withRouter(Stars);","import React from 'react';\nimport './footer.css'\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport ListIcon from '@material-ui/icons/List';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport AdbIcon from '@material-ui/icons/Adb';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { authenticationService } from '../LoginForm/LoginForm';\n\nfunction Footer(props) {\n    const currentUser = authenticationService.currentUserValue\n    const isAdmin = currentUser === 'admin'\n    return(\n        <footer className=\"parent \">\n        {isAdmin ? \n        <div className=\"row\">\n                <div className=\"column-home\">\n                <i className=\"home-icon\">\n                    <ListIcon />\n                </i>\n                <Link to=\"/myevents\" className=\"home-text\" >\n                Tasks\n                </Link>\n            </div>\n            <div className=\"column-home\">\n                <i className=\"home-icon\">\n                    <AddCircleOutlineIcon />\n                </i>\n                <Link to=\"/tasks\" className=\"home-text\" >\n                Add Tasks\n                </Link>\n            </div>\n            <div className=\"column-home\">\n                <i className=\"home-icon\">\n                    <HomeIcon />\n                </i>\n                <Link to=\"/home\" className=\"home-text\" >\n                Events\n                </Link>\n            </div>\n            <div className=\"column-home\">\n                <i className=\"home-icon\">\n                <AdbIcon />\n                </i>\n                <Link to=\"/admin\" className=\"home-text\" >\n                Post Event\n                </Link>\n            </div>\n        \n        </div>\n        :\n        <div className=\"row\">\n            <div className=\"column-home\">\n                <i className=\"home-icon\">\n                    <ListIcon />\n                </i>\n                <Link to=\"/myevents\" className=\"home-text\" >\n                Tasks\n                </Link>\n            </div>\n            <div className=\"column-home\">\n                <i className=\"home-icon\">\n                    <HomeIcon />\n                </i>\n                <Link to=\"/home\" className=\"home-text\" >\n                Events\n                </Link>\n            </div>\n            <div className=\"column-home\">\n                <i className=\"home-icon\">\n                    <StarsIcon />\n                </i>\n                <Link to=\"/stars\" className=\"home-text\" >\n                Stars\n                </Link>\n            </div>\n        </div>\n    }\n        </footer>\n        )\n}\nexport default Footer","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {API_BASE_URL, TASK_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport moment from 'moment'\nimport { authenticationService } from '../LoginForm/LoginForm';\nconst currentUser = authenticationService.currentUserValue\n\nclass Events extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            events: [],\n            loggedUser: []\n        }\n        this.setState = this.setState.bind(this)\n        this.goBack = this.goBack.bind(this);\n\n        const previousStars = \"\"\n        const currentStars = \"\";\n    }\n    \n    componentDidMount(){\n        let event = {eventID : this.props.match.params.eventID}\n        axios.post(API_BASE_URL+'events/' + event.eventID, event)\n        .then(event => {\n            const events = event.data\n            this.setState({events})\n        })\n        .catch(err => console.log(\"Error \"+ err))\n        axios.post(TASK_BASE_URL+'getUser', currentUser)\n        .then(user => {\n            console.log(currentUser)\n            const loggedUser = user.data\n            console.log(user)\n            this.setState(loggedUser)\n            \n            // this.state.events.\n        })\n    }\n\n    goBack(){\n        this.props.history.goBack();\n    }\n\n    handleChange = e => {\n        const {id , value} = e.target   \n        this.setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    authenticateCode = e => {\n        console.log(\"currentUser\", this.state)\n        // const {value} = e.target\n        // if(value === this.state.eventCode){\n        //     this.state.\n        // }\n    }\n\n    render(){\n    return(\n        <div className=\"col-12 col-lg-4 mt-2 hv-center myevents\">\n        {this.state.events.map (post => \n                        <div>\n                            <img\n                                alt=\"Event Venue\" \n                                src={\"../\" + post.eventPhoto}\n                                width=\"100%\" height=\"100%\" \n                            />\n                        <p>Event Name: </p>\n                        <h4>\n                        {post.eventName}\n                        </h4>\n                        <br/>\n                        <p>\n                        Event Date: &nbsp;\n                        {moment(post.eventDate).format(\"MMM Do YYYY\")}\n                        </p>\n                        <p>\n                        Event Venue: &nbsp;\n                        {post.eventVenue}\n                        </p>\n                        <p>\n                        Details: &nbsp;\n                        {post.eventDetail}\n                        </p>\n                        <p>Stars: &nbsp;\n                        {post.eventStars}\n                        </p>\n                        <p>\n                        Start time: &nbsp;\n                        {post.eventStart}\n                        <br />\n                        End time: &nbsp;\n                        {post.eventEnd}\n                        <br />\n                        </p>\n                        <div className = \"form-group row\">\n                            <div className = \"col-xs-2\">\n                        <p>\n                        <br />\n                                Attended the event?<br />\n                                <label>Verify your attendance: </label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"eventCode\" \n                                    placeholder=\"Enter event code\" \n                                    value={this.state.eventCode}\n                                    onChange={this.handleChange}\n                                    required\n                                />\n                                <button className=\"button icon-left\" onClick={this.authenticateCode}>Verify</button>\n                        </p>\n                            </div>\n                        </div>\n                        <button className=\"button icon-left\" onClick={this.goBack}>Go back</button>\n                        </div>\n        )}\n        <div className=\"push\"></div>\n\t</div>\n    )\n}\n}\n\nexport default withRouter(Events);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {TASK_BASE_URL} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\nimport DatePicker from 'react-date-picker';\nimport './tasks.css'\n\nfunction UploadTask(props) {\n\n    const [task , setTasks] = useState({\n        Name: \"\",\n        DateDue : new Date(),\n        userID: \"\",\n    })\n\n    const handleChangeDate = (date) => {\n        setTasks(prevState => ({\n            ...prevState,\n            DateDue: date\n        }))\n    }\n    const handleChange = e => {\n        const {id , value} = e.target   \n        setTasks(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = e => {\n        // e.preventDefault();\n        const payload = {\n            \"taskName\" : task.Name,\n            \"dateDue\" : task.DateDue,\n            \"userID\" : task.userID\n        }\n        if(payload){\n        axios.post(TASK_BASE_URL+'post', payload)\n            .then(function (response) {\n                if(response.data.code === 200){\n                    console.log(task)\n                    setTasks(prevState => ({\n                        ...prevState\n                    }))\n                }\n            })\n            .catch(function (error) {\n                console.log(\"Error\" + error);\n            });\n            alert(\"Task posted!\")\n        }\n        else{\n            e.preventDefault();\n        }\n    }\n\n    return(\n        <div className=\"col-xs-6 col-sm-8 col-lg-6 hv-center mt-2 task\">\n            <form>\n                <div className=\"form-group text-left admin-content\">\n                <label>Task Name</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"Name\" \n                       placeholder=\"Enter task name\" \n                       value={task.Name}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n                <div className=\"form-group text-left\">\n                <label>Task Due</label>\n                <br />\n                <DatePicker\n                    onChange={handleChangeDate}\n                    value={task.DateDue}\n                    minDate={new Date()}\n                    required\n                    dateFormat=\"dd/MM/yyyy\"\n                    />\n                </div>\n\n                <div className=\"form-group text-left admin-content\">\n                <label>For?</label>\n                <input type=\"text\" \n                       className=\"form-control\" \n                       id=\"userID\" \n                       placeholder=\"Enter email\" \n                       value={task.userID}\n                       onChange={handleChange}\n                       required\n                />\n\n                </div>\n\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-clock\"\n                    onClick={handleSubmitClick}\n                >Submit</button>\n            </form>\n            <div className=\"push\"></div>\n        </div>\n    )\n}\n\nexport default withRouter(UploadTask);","import React, { useState, useEffect } from 'react';\nimport './AlertComponent.css';\nfunction AlertComponent(props) {\n    const [modalDisplay, toggleDisplay] = useState('none');\n    const openModal = () => {\n        toggleDisplay('block');     \n    }\n    const closeModal = () => {\n        toggleDisplay('none'); \n        props.hideError(null);\n    }\n    useEffect(() => {\n        if(props.errorMessage !== null) {\n            openModal()\n        } else {\n            closeModal()\n        }\n    });\n    \n    return(\n        <div \n            className={\"alert alert-danger alert-dismissable mt-4\"} \n            role=\"alert\" \n            id=\"alertPopUp\"\n            style={{ display: modalDisplay }}\n        >\n            \n                <span>{props.errorMessage}</span>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            \n        </div>\n    )\n} \n\nexport default AlertComponent","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../LoginForm/LoginForm';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        else\n        return <Component {...props} />\n    }} />\n)\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../LoginForm/LoginForm';\n\nexport const AdminRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n        if (currentUser !== 'admin') {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/home', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport Admin from './components/Admin/admin';\n//import MyEvents from './components/MyEvents/myevents';\nimport Stars from './components/Stars/stars';\nimport Footer from './components/Footer/Footer';\nimport Events from './components/Events/events';\nimport Tasks from './components/Tasks/tasks';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AlertComponent from './components/AlertComponent/AlertComponent';\nimport { PrivateRoute } from './components/routes/PrivateRoute';\nimport { AdminRoute } from './components/routes/adminRoute';\nimport { authenticationService } from '../src/components/LoginForm/LoginForm';\nimport { userService } from '../src/components/Helpers/user-service';\n\nfunction App() {\n  const [title, updateTitle] = useState(null);\n  const [errorMessage, updateErrorMessage] = useState(null);\n  const currentUser = localStorage.getItem('currentUser');\n  // const [currentUser, setUser] = useState(null)\n  const isLoggedIn = currentUser;\n\n  // useEffect(() => {\n  //   userService.getAll().then(users => this.setUser({ users }));\n  // })\n\n  return (\n    <Router>\n      <div className='App'>\n        <Header title={title} />\n        <div className='container d-flex justify-content-center'>\n          <Switch>\n            <Route path='/' exact>\n              <LoginForm\n                showError={updateErrorMessage}\n                updateTitle={updateTitle}\n              />\n            </Route>\n            <Route path='/register'>\n              <RegistrationForm\n                showError={updateErrorMessage}\n                updateTitle={updateTitle}\n              />\n            </Route>\n            <Route path='/login'>\n              <LoginForm\n                showError={updateErrorMessage}\n                updateTitle={updateTitle}\n              />\n            </Route>\n            <PrivateRoute path='/home' refresh='true' component={Home} />\n            <AdminRoute path='/admin' component={Admin} />\n            <AdminRoute path='/tasks' component={Tasks} />\n            <PrivateRoute path='/stars' component={Stars} />\n            {/* <PrivateRoute path='/myevents' component={MyEvents} /> */}\n            <PrivateRoute path='/events/:eventID' exact component={Events} />\n            {/* <Route path=\"/events\" exact component={Events} /> */}\n          </Switch>\n          <AlertComponent\n            errorMessage={errorMessage}\n            hideError={updateErrorMessage}\n          />\n        </div>\n        {isLoggedIn ? <Footer /> : null}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}